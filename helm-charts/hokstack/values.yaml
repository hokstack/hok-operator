ambariserver:
  componentName: ambari
  containerCmd:
  - /scripts/ambari-start.sh
  enabled: true
  image:
    repository: index.docker.io/hokstack/hdp
  lifecycle:
    postStart:
      exec:
        command:
        - /scripts/ambari-pre.sh
  name: ambariserver
  persistentVolume:
    accessModes: ReadWriteOnce
    enabled: true
    storage: 1Gi
    storageClassName: gp2
  securityContext:
    capabilities:
      add:
      - SYS_ADMIN
    runAsUser: 0
danteproxy:
  enabled: true
  image:
    repository: index.docker.io/hokstack/dante-proxy
  name: danteproxy
datanode:
  componentName: data
  containerCmd:
  - /scripts/data-start.sh
  enabled: true
  image:
    repository: index.docker.io/hokstack/hdp
  lifecycle:
    postStart:
      exec:
        command:
        - /scripts/data-pre.sh
  name: datanode
  persistentVolume:
    accessModes: ReadWriteOnce
    enabled: true
    mountPath: /hadoop
    storage: 10Gi
    storageClassName: gp2
  securityContext:
    capabilities:
      add:
      - ALL
    runAsUser: 0
edgenode:
  componentName: edge
  containerCmd:
  - /scripts/edge-start.sh
  enabled: true
  image:
    repository: index.docker.io/hokstack/hdp
  lifecycle:
    postStart:
      exec:
        command:
        - /scripts/edge-pre.sh
  name: edgenode
  persistentVolume:
    accessModes: ReadWriteOnce
    enabled: true
    mountPath: /hadoop
    storage: 10Gi
    storageClassName: gp2
  securityContext:
    capabilities:
      add:
      - ALL
    runAsUser: 0
imagePullPolicy: Always
kdc:
  componentName: kdc
  enabled: true
  image:
    repository: index.docker.io/hokstack/kdc
  name: kdcserver
  persistentVolume:
    accessModes: ReadWriteOnce
    enabled: true
    storage: 10Gi
    storageClassName: gp2
  realmName: DEMO.COM
masternode:
  componentName: master
  containerCmd:
  - /scripts/master-start.sh
  enabled: true
  image:
    repository: index.docker.io/hokstack/hdp
  lifecycle:
    postStart:
      exec:
        command:
        - /scripts/master-pre.sh
  name: masternode
  persistentVolume:
    accessModes: ReadWriteOnce
    enabled: true
    mountPath: /hadoop
    storage: 10Gi
    storageClassName: gp2
  securityContext:
    capabilities:
      add:
      - ALL
    runAsUser: 0
metacontroller:
  crds:
    create: true
  enabled: true
  image:
    repository: metacontroller/metacontroller
    tag: v0.4.0
  name: metacontroller
  rbac:
    create: true
  serviceAccount:
    create: true
postgres:
  enabled: true
  image:
    repository: index.docker.io/hokstack/postgresql
  lifecycle:
    postStart:
      exec:
        command:
        - /postgres-pre.sh
  name: postgres
  persistentVolume:
    accessModes: ReadWriteOnce
    enabled: true
    mountPath: /var/lib/pgsql
    storage: 10Gi
    storageClassName: gp2
  replicaCount: 1
  securityContext:
    capabilities:
      add:
      - SYS_ADMIN
    runAsUser: 0
teamname: shubh-demo1
